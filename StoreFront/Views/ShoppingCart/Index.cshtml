@model Store_Front.Models.ShoppingCartViewModel

@{
    ViewBag.Title = "Shopping Cart";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";

}



<h2>Shopping Cart </h2> <div class="input-lg text-right" id="cartCount">@Model.CartCount items</div>

<p>

</p>
@if (Model != null)
{
    using (Html.BeginForm())
    {
        var products = Model.ShoppingCartItems;
        if (products.Count() > 0)
        {
            <div class="alert-success left" id="update-message"></div>
            <table class="table table-hover" id="table" name="table" data-toggle="table" data-toolbar="#toolbar">
                <thead>

                    <tr>
                        <th class="text-center">
                            Product Name
                        </th>

                        <th class="text-center">
                            Image
                        </th>

                        <th class="text-center">
                            Quantity
                        </th>

                        <th class="text-center">
                            Price
                        </th>

                        <th class="text-center">
                            Remove Item
                        </th>

                    </tr>
                </thead>
                @{int index = 0;
                }
                <tbody id="CartContents" class="text-center">
                    @foreach (var item in products)
                    {
                        <tr id="row-@item.ProductID">
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>

                            <td>
                                @if (item.ImageFile != null)
                                {
                                    <img width="60" src="@Url.Content(item.ImageFile)" alt="Image" name="DBImage" />
                                }
                            </td>

                            <td id="d-@index" data-id="@item.ProductID">

                                @Html.TextBoxFor(modelItem => item.Quantity, new
                           {
                               id = @index,
                               style = "width:30px; text-align:right;"
                           })
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>

                            <td>
                                <input type="button" class="btn-default btn" id="remove" name="remove" data-id="@item.ProductID" value="Remove from cart" />
                            </td>

                        </tr>
                        index++;
                    }
                </tbody>

            </table>

            <p class="alert">
                <input class="pull-right btn btn-success" type="submit" value="Place Order" />
                <input class="pull-right btn" id="update" type="button" onclick="Update('@index')" value="Update Cart" />
            </p>
                    }

                    if (products.Count() < 1)
                    {
                        <textarea class="alert" name="nResult">Shopping Cart is empty.</textarea>
                            }
                        }
                    }

@section scripts{
    <script>
        $(document).ready(function () {
            loadTable();

            $(".btn-default").click(function () {

                if (confirm("Are you sure you want to remove this item?")) {
                    var itemToDelete = $(this).attr("data-id");
                    if (itemToDelete != '') {
                        $.post("/ShoppingCart/Remove", { "pid": itemToDelete }
                        )
                        .success(function (data) {
                            $('#row-' + data.deleteID).fadeOut('slow');
                            $('#update-message').text(data.Message);
                            $('#cartCount').text(data.CartCount + " items");
                            $('#update-message').fadeOut(3000);
                        })
                        .error(function (xhr, status, result) {
                            alert(result.Message);
                        });
                    }
                }
            })
        });


        function Update(val) {

            while(val>0){
                val--;
                var pID = $("#d-"+val).data("id");
                var quantity=$("#"+val).val();
                $.post("/ShoppingCart/UpdateCart", { "productId": pID, "quantity": quantity })
            }            
                    var url = '@Url.Action("Index","ShoppingCart")';
                    window.location.href = url;
                    alert("Shopping Cart Update Successful!");
        }



        function loadTable() {
            var table = $("#table").DataTable({
                filter: false,
                lengthChange: false,
                pageLength: 50,
                info: false
            });
        }


    </script>
}